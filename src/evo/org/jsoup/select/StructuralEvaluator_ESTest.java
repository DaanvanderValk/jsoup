/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 19 10:46:54 GMT 2018
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.jsoup.select.StructuralEvaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StructuralEvaluator_ESTest extends StructuralEvaluator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StructuralEvaluator.Root structuralEvaluator_Root0 = new StructuralEvaluator.Root();
      assertNotNull(structuralEvaluator_Root0);
      
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(structuralEvaluator_Root0);
      assertNotNull(structuralEvaluator_Not0);
      
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(structuralEvaluator_Not0);
      assertNotNull(structuralEvaluator_Has0);
      
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(structuralEvaluator_Has0);
      assertNotNull(structuralEvaluator_ImmediateParent0);
      
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(structuralEvaluator_ImmediateParent0);
      assertNotNull(structuralEvaluator_PreviousSibling0);
      
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent1 = new StructuralEvaluator.ImmediateParent(structuralEvaluator_Not0);
      assertNotNull(structuralEvaluator_ImmediateParent1);
      assertFalse(structuralEvaluator_ImmediateParent1.equals((Object)structuralEvaluator_ImmediateParent0));
      
      structuralEvaluator_Has0.evaluator = (Evaluator) structuralEvaluator_ImmediateParent1;
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertNotNull(string0);
      assertNotSame(structuralEvaluator_ImmediateParent0, structuralEvaluator_ImmediateParent1);
      assertFalse(structuralEvaluator_ImmediateParent0.equals((Object)structuralEvaluator_ImmediateParent1));
      
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(structuralEvaluator_Root0);
      assertNotNull(structuralEvaluator_Parent0);
      
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      Element element1 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn((Element) null).when(element1).parent();
      // Undeclared exception!
      try { 
        structuralEvaluator_Parent0.matches(element0, element1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.StructuralEvaluator$Parent", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StructuralEvaluator.Root structuralEvaluator_Root0 = new StructuralEvaluator.Root();
      assertNotNull(structuralEvaluator_Root0);
      
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(structuralEvaluator_Root0);
      assertNotNull(structuralEvaluator_ImmediateParent0);
      
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(structuralEvaluator_ImmediateParent0);
      assertNotNull(structuralEvaluator_PreviousSibling0);
      
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertNotNull(string0);
      
      boolean boolean0 = structuralEvaluator_PreviousSibling0.matches((Element) null, (Element) null);
      assertFalse(boolean0);
      
      boolean boolean1 = structuralEvaluator_PreviousSibling0.matches((Element) null, (Element) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String string1 = structuralEvaluator_PreviousSibling0.toString();
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      
      String string2 = structuralEvaluator_PreviousSibling0.toString();
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling1 = new StructuralEvaluator.PreviousSibling(structuralEvaluator_ImmediateParent0);
      assertNotNull(structuralEvaluator_PreviousSibling1);
      assertFalse(structuralEvaluator_PreviousSibling1.equals((Object)structuralEvaluator_PreviousSibling0));
      
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(structuralEvaluator_PreviousSibling1);
      assertNotNull(structuralEvaluator_Not0);
      assertFalse(structuralEvaluator_PreviousSibling1.equals((Object)structuralEvaluator_PreviousSibling0));
      
      boolean boolean2 = structuralEvaluator_Not0.matches((Element) null, (Element) null);
      assertNotSame(structuralEvaluator_PreviousSibling1, structuralEvaluator_PreviousSibling0);
      assertTrue(boolean2);
      assertFalse(structuralEvaluator_PreviousSibling1.equals((Object)structuralEvaluator_PreviousSibling0));
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StructuralEvaluator.Root structuralEvaluator_Root0 = new StructuralEvaluator.Root();
      assertNotNull(structuralEvaluator_Root0);
      
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(structuralEvaluator_Root0);
      assertNotNull(structuralEvaluator_Not0);
      
      structuralEvaluator_Not0.evaluator = (Evaluator) structuralEvaluator_Root0;
      String string0 = structuralEvaluator_Not0.toString();
      assertNotNull(string0);
      
      structuralEvaluator_Not0.evaluator = (Evaluator) structuralEvaluator_Root0;
      StructuralEvaluator.Root structuralEvaluator_Root1 = new StructuralEvaluator.Root();
      assertNotNull(structuralEvaluator_Root1);
      assertFalse(structuralEvaluator_Root1.equals((Object)structuralEvaluator_Root0));
      
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(structuralEvaluator_Root1);
      assertNotNull(structuralEvaluator_ImmediatePreviousSibling0);
      assertFalse(structuralEvaluator_Root1.equals((Object)structuralEvaluator_Root0));
      
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      Element element1 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn((Element) null).when(element1).previousElementSibling();
      boolean boolean0 = structuralEvaluator_ImmediatePreviousSibling0.matches(element0, element1);
      assertNotSame(structuralEvaluator_Root1, structuralEvaluator_Root0);
      assertFalse(boolean0);
      assertFalse(structuralEvaluator_Root1.equals((Object)structuralEvaluator_Root0));
      
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(structuralEvaluator_Not0);
      assertNotNull(structuralEvaluator_Has0);
      assertFalse(structuralEvaluator_Root0.equals((Object)structuralEvaluator_Root1));
      
      String string1 = structuralEvaluator_Has0.toString();
      assertNotNull(string1);
      assertNotSame(structuralEvaluator_Root0, structuralEvaluator_Root1);
      assertFalse(structuralEvaluator_Root0.equals((Object)structuralEvaluator_Root1));
      assertFalse(string1.equals((Object)string0));
      
      Element element2 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = structuralEvaluator_Not0.matches(element2, element2);
      assertNotSame(structuralEvaluator_Root0, structuralEvaluator_Root1);
      assertFalse(boolean1);
      assertFalse(structuralEvaluator_Root0.equals((Object)structuralEvaluator_Root1));
      assertTrue(boolean1 == boolean0);
      
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(structuralEvaluator_Not0);
      assertNotNull(structuralEvaluator_Parent0);
      assertFalse(structuralEvaluator_Root0.equals((Object)structuralEvaluator_Root1));
      
      structuralEvaluator_Parent0.evaluator = (Evaluator) structuralEvaluator_Root0;
      Element element3 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean2 = structuralEvaluator_Parent0.matches(element3, element3);
      assertNotSame(structuralEvaluator_Root0, structuralEvaluator_Root1);
      assertFalse(boolean2);
      assertFalse(structuralEvaluator_Root0.equals((Object)structuralEvaluator_Root1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      String string2 = structuralEvaluator_Parent0.toString();
      assertNotNull(string2);
      assertNotSame(structuralEvaluator_Root0, structuralEvaluator_Root1);
      assertFalse(structuralEvaluator_Root0.equals((Object)structuralEvaluator_Root1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      Element element4 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean3 = structuralEvaluator_Not0.matches(element4, element4);
      assertNotSame(structuralEvaluator_Root0, structuralEvaluator_Root1);
      assertFalse(boolean3);
      assertFalse(structuralEvaluator_Root0.equals((Object)structuralEvaluator_Root1));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      
      String string3 = structuralEvaluator_Has0.toString();
      assertNotNull(string3);
      assertNotSame(structuralEvaluator_Root0, structuralEvaluator_Root1);
      assertFalse(structuralEvaluator_Root0.equals((Object)structuralEvaluator_Root1));
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      
      String string4 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertNotNull(string4);
      assertNotSame(structuralEvaluator_Root1, structuralEvaluator_Root0);
      assertFalse(structuralEvaluator_Root1.equals((Object)structuralEvaluator_Root0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling((Evaluator) null);
      assertNotNull(structuralEvaluator_ImmediatePreviousSibling0);
      
      structuralEvaluator_ImmediatePreviousSibling0.evaluator = null;
      String string0 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertNotNull(string0);
      assertEquals(":prevnull", string0);
      
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling((Evaluator) null);
      assertNotNull(structuralEvaluator_PreviousSibling0);
      
      String string1 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertNotNull(string1);
      assertEquals(":prevnull", string1);
      assertTrue(string1.equals((Object)string0));
      
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = structuralEvaluator_PreviousSibling0.matches(element0, element0);
      assertFalse(boolean0);
      
      Element element1 = mock(Element.class, new ViolatedAssumptionAnswer());
      Element element2 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = structuralEvaluator_PreviousSibling0.matches(element2, element2);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String string2 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertNotNull(string2);
      assertEquals(":prevnull", string2);
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      
      Element element3 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn((Element) null).when(element3).previousElementSibling();
      boolean boolean2 = structuralEvaluator_PreviousSibling0.matches(element1, element3);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(structuralEvaluator_ImmediatePreviousSibling0);
      assertNotNull(structuralEvaluator_ImmediateParent0);
      
      String string3 = structuralEvaluator_ImmediateParent0.toString();
      assertNotNull(string3);
      assertEquals(":ImmediateParent:prevnull", string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(structuralEvaluator_ImmediateParent0);
      assertNotNull(structuralEvaluator_Parent0);
      
      Element element4 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean3 = structuralEvaluator_Parent0.matches(element4, element4);
      assertFalse(boolean3);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Evaluator evaluator0 = null;
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling((Evaluator) null);
      assertNotNull(structuralEvaluator_PreviousSibling0);
      
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertNotNull(string0);
      assertEquals(":prev*null", string0);
      
      String string1 = structuralEvaluator_PreviousSibling0.toString();
      assertNotNull(string1);
      assertEquals(":prev*null", string1);
      assertTrue(string1.equals((Object)string0));
      
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling((Evaluator) null);
      assertNotNull(structuralEvaluator_ImmediatePreviousSibling0);
      
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = structuralEvaluator_ImmediatePreviousSibling0.matches(element0, element0);
      assertFalse(boolean0);
      
      String string2 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertNotNull(string2);
      assertEquals(":prevnull", string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      Element element1 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = structuralEvaluator_PreviousSibling0.matches(element1, element1);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Element element2 = mock(Element.class, new ViolatedAssumptionAnswer());
      String string3 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertNotNull(string3);
      assertEquals(":prevnull", string3);
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      
      boolean boolean2 = structuralEvaluator_ImmediatePreviousSibling0.matches(element2, element2);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(structuralEvaluator_PreviousSibling0);
      assertNotNull(structuralEvaluator_Not0);
      
      structuralEvaluator_Not0.evaluator = null;
      Element element3 = mock(Element.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        structuralEvaluator_Not0.matches(element3, element3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.StructuralEvaluator$Not", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StructuralEvaluator.Root structuralEvaluator_Root0 = new StructuralEvaluator.Root();
      assertNotNull(structuralEvaluator_Root0);
      
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(structuralEvaluator_Root0);
      assertNotNull(structuralEvaluator_Parent0);
      
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = structuralEvaluator_Root0.matches(element0, element0);
      assertTrue(boolean0);
      
      Element element1 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = structuralEvaluator_Root0.matches(element1, element1);
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(structuralEvaluator_Root0);
      assertNotNull(structuralEvaluator_PreviousSibling0);
      
      structuralEvaluator_PreviousSibling0.evaluator = (Evaluator) structuralEvaluator_Root0;
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertNotNull(string0);
      
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(structuralEvaluator_PreviousSibling0);
      assertNotNull(structuralEvaluator_Has0);
      
      String string1 = structuralEvaluator_Has0.toString();
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = structuralEvaluator_Has0.toString();
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(structuralEvaluator_PreviousSibling0.evaluator);
      assertNotNull(structuralEvaluator_ImmediatePreviousSibling0);
      
      Element element2 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean2 = structuralEvaluator_ImmediatePreviousSibling0.matches(element2, element2);
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StructuralEvaluator.Root structuralEvaluator_Root0 = new StructuralEvaluator.Root();
      assertNotNull(structuralEvaluator_Root0);
      
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(structuralEvaluator_Root0);
      assertNotNull(structuralEvaluator_Has0);
      
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(structuralEvaluator_Has0);
      assertNotNull(structuralEvaluator_Not0);
      
      String string0 = structuralEvaluator_Not0.toString();
      assertNotNull(string0);
      
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        structuralEvaluator_Has0.matches(element0, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.StructuralEvaluator$Has", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StructuralEvaluator.Root structuralEvaluator_Root0 = new StructuralEvaluator.Root();
      assertNotNull(structuralEvaluator_Root0);
      
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(structuralEvaluator_Root0);
      assertNotNull(structuralEvaluator_Parent0);
      
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = structuralEvaluator_Parent0.matches(element0, element0);
      assertFalse(boolean0);
      
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(structuralEvaluator_Parent0);
      assertNotNull(structuralEvaluator_ImmediateParent0);
      
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertNotNull(string0);
      
      String string1 = structuralEvaluator_ImmediateParent0.toString();
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      
      StructuralEvaluator.Root structuralEvaluator_Root1 = new StructuralEvaluator.Root();
      assertNotNull(structuralEvaluator_Root1);
      assertFalse(structuralEvaluator_Root1.equals((Object)structuralEvaluator_Root0));
      
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(structuralEvaluator_Root1);
      assertNotNull(structuralEvaluator_ImmediatePreviousSibling0);
      assertFalse(structuralEvaluator_Root1.equals((Object)structuralEvaluator_Root0));
      
      String string2 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertNotNull(string2);
      assertNotSame(structuralEvaluator_Root1, structuralEvaluator_Root0);
      assertFalse(structuralEvaluator_Root1.equals((Object)structuralEvaluator_Root0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      structuralEvaluator_ImmediatePreviousSibling0.evaluator = (Evaluator) structuralEvaluator_Root1;
      Element element1 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = structuralEvaluator_ImmediatePreviousSibling0.matches(element1, element1);
      assertNotSame(structuralEvaluator_Root1, structuralEvaluator_Root0);
      assertFalse(boolean1);
      assertFalse(structuralEvaluator_Root1.equals((Object)structuralEvaluator_Root0));
      assertTrue(boolean1 == boolean0);
      
      String string3 = structuralEvaluator_Parent0.toString();
      assertNotNull(string3);
      assertNotSame(structuralEvaluator_Root0, structuralEvaluator_Root1);
      assertFalse(structuralEvaluator_Root0.equals((Object)structuralEvaluator_Root1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      
      Element element2 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean2 = structuralEvaluator_Parent0.matches(element2, element2);
      assertNotSame(structuralEvaluator_Root0, structuralEvaluator_Root1);
      assertFalse(boolean2);
      assertFalse(structuralEvaluator_Root0.equals((Object)structuralEvaluator_Root1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      structuralEvaluator_ImmediateParent0.evaluator = (Evaluator) structuralEvaluator_Root1;
      Element element3 = mock(Element.class, new ViolatedAssumptionAnswer());
      Element element4 = null;
      // Undeclared exception!
      try { 
        structuralEvaluator_ImmediateParent0.matches(element3, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.StructuralEvaluator$ImmediateParent", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StructuralEvaluator.Root structuralEvaluator_Root0 = new StructuralEvaluator.Root();
      assertNotNull(structuralEvaluator_Root0);
      
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(structuralEvaluator_Root0);
      assertNotNull(structuralEvaluator_Not0);
      
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(structuralEvaluator_Not0);
      assertNotNull(structuralEvaluator_ImmediatePreviousSibling0);
      
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(structuralEvaluator_ImmediatePreviousSibling0);
      assertNotNull(structuralEvaluator_ImmediateParent0);
      
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(structuralEvaluator_ImmediateParent0);
      assertNotNull(structuralEvaluator_PreviousSibling0);
      
      StructuralEvaluator.Not structuralEvaluator_Not1 = new StructuralEvaluator.Not(structuralEvaluator_PreviousSibling0);
      assertNotNull(structuralEvaluator_Not1);
      assertFalse(structuralEvaluator_Not1.equals((Object)structuralEvaluator_Not0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StructuralEvaluator.Root structuralEvaluator_Root0 = new StructuralEvaluator.Root();
      assertNotNull(structuralEvaluator_Root0);
      
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(structuralEvaluator_Root0);
      assertNotNull(structuralEvaluator_Parent0);
      
      String string0 = structuralEvaluator_Parent0.toString();
      assertNotNull(string0);
      
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(structuralEvaluator_Parent0);
      assertNotNull(structuralEvaluator_ImmediateParent0);
      
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = structuralEvaluator_ImmediateParent0.matches(element0, element0);
      assertFalse(boolean0);
      
      Element element1 = mock(Element.class, new ViolatedAssumptionAnswer());
      Element element2 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = structuralEvaluator_Parent0.matches(element2, element2);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = structuralEvaluator_Parent0.matches(element1, element1);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      String string1 = structuralEvaluator_Parent0.toString();
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      
      Element element3 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean3 = structuralEvaluator_Root0.matches(element3, element3);
      assertTrue(boolean3);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      
      Element element4 = mock(Element.class, new ViolatedAssumptionAnswer());
      boolean boolean4 = structuralEvaluator_ImmediateParent0.matches(element4, element4);
      assertFalse(boolean4);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(structuralEvaluator_Root0);
      assertNotNull(structuralEvaluator_Not0);
      
      String string2 = structuralEvaluator_Not0.toString();
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      String string3 = structuralEvaluator_Not0.toString();
      assertNotNull(string3);
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      
      StructuralEvaluator.Not structuralEvaluator_Not1 = new StructuralEvaluator.Not(structuralEvaluator_ImmediateParent0);
      assertNotNull(structuralEvaluator_Not1);
      assertFalse(structuralEvaluator_Not1.equals((Object)structuralEvaluator_Not0));
      
      StructuralEvaluator.Parent structuralEvaluator_Parent1 = new StructuralEvaluator.Parent(structuralEvaluator_Not1);
      assertNotNull(structuralEvaluator_Parent1);
      assertFalse(structuralEvaluator_Not1.equals((Object)structuralEvaluator_Not0));
      assertFalse(structuralEvaluator_Parent1.equals((Object)structuralEvaluator_Parent0));
      
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(structuralEvaluator_Parent1);
      assertNotNull(structuralEvaluator_Has0);
      assertFalse(structuralEvaluator_Parent0.equals((Object)structuralEvaluator_Parent1));
      assertFalse(structuralEvaluator_Not1.equals((Object)structuralEvaluator_Not0));
      assertFalse(structuralEvaluator_Parent1.equals((Object)structuralEvaluator_Parent0));
      
      Element element5 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn((Elements) null).when(element5).getAllElements();
      // Undeclared exception!
      try { 
        structuralEvaluator_Has0.matches(element5, element5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.StructuralEvaluator$Has", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StructuralEvaluator.Root structuralEvaluator_Root0 = new StructuralEvaluator.Root();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      structuralEvaluator_Root0.matches(element0, element0);
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(structuralEvaluator_Root0);
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(structuralEvaluator_Not0);
      Element element1 = mock(Element.class, new ViolatedAssumptionAnswer());
      structuralEvaluator_ImmediatePreviousSibling0.matches(element1, element1);
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(structuralEvaluator_Not0);
      Element element2 = mock(Element.class, new ViolatedAssumptionAnswer());
      structuralEvaluator_PreviousSibling0.matches(element2, element2);
      Element element3 = mock(Element.class, new ViolatedAssumptionAnswer());
      structuralEvaluator_Not0.matches(element3, element3);
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(structuralEvaluator_ImmediatePreviousSibling0);
      structuralEvaluator_Not0.toString();
      structuralEvaluator_ImmediateParent0.toString();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(structuralEvaluator_ImmediateParent0);
      structuralEvaluator_Has0.evaluator = (Evaluator) structuralEvaluator_ImmediateParent0;
      structuralEvaluator_Has0.toString();
      Element element4 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn((Elements) null).when(element4).getAllElements();
      // Undeclared exception!
      try { 
        structuralEvaluator_Has0.matches(element4, element4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.StructuralEvaluator$Has", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent((Evaluator) null);
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(structuralEvaluator_ImmediateParent0);
      structuralEvaluator_ImmediateParent0.evaluator = null;
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      Element element1 = null;
      // Undeclared exception!
      try { 
        structuralEvaluator_Has0.matches((Element) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.StructuralEvaluator$Has", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StructuralEvaluator.Root structuralEvaluator_Root0 = new StructuralEvaluator.Root();
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(structuralEvaluator_Root0);
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(structuralEvaluator_ImmediatePreviousSibling0);
      Element element0 = null;
      structuralEvaluator_PreviousSibling0.matches((Element) null, (Element) null);
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(structuralEvaluator_ImmediatePreviousSibling0);
      // Undeclared exception!
      try { 
        structuralEvaluator_Has0.matches((Element) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.StructuralEvaluator$Has", e);
      }
  }
}
